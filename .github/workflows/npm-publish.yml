
# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://help.github.com/actions/language-and-framework-guides/publishing-nodejs-packages

name: Merge Pull Request & Publish

on:
  workflow_dispatch: # allows manual trigger
  pull_request:
    types: [ closed ]
    branches:
      - main
      - 'releases/**-alpha*' # allow alpha releases
      - 'releases/**-beta*' # allow beta releases
  

jobs:
  build:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [12, 14]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}
      - name: Install dependencies
        run: npm ci
      - name: Run linters
        run: npm run lint
      - name: Run tests
        run: npm test

  version:
    needs: build
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: "0"
          # modifed to give greater permissions.  MUST MAINTAIN CODEOWNERS FILE FOR THIS TO BE SECURE
          token: ${{ secrets.GH_CI_TOKEN }}
          ref: ${{ github.GITHUB_BASE_REF }}
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      
      - name: Fetch dependencies 
        run: npm ci
 
      - name: Get the new semver and store in env

        run: |
          NEW_VERSION=$(npx semantic-release@18.0.1 --no-ci --dry-run | egrep 'next release version is ([0-9]+\.[0-9]+\.[0-9]+)' | egrep -o '([0-9]+\.[0-9]+\.[0-9]+)')
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
      
      - name: Change Version and stage the changes
        run: |
          npm version $NEW_VERSION --no-git-tag-version --allow-same-version
          git add package.json
          git add package-lock.json
      
      - name: amend and tag the commit
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git pull
          git commit --amend --no-edit
          git tag "v$NEW_VERSION"
          git remote set-url origin https://github.com/${GITHUB_REPOSITORY}.git
          git push --force
          git push origin "v$NEW_VERSION"
      

  publish-npm:
    needs: version
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}